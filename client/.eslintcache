[{"/Users/kimv/Desktop/kim-instock/inStock/client/src/index.js":"1","/Users/kimv/Desktop/kim-instock/inStock/client/src/App.js":"2","/Users/kimv/Desktop/kim-instock/inStock/client/src/reportWebVitals.js":"3","/Users/kimv/Desktop/kim-instock/inStock/client/src/components/Warehouselist/Warehouselist.jsx":"4","/Users/kimv/Desktop/kim-instock/inStock/client/src/components/Header/Header.jsx":"5","/Users/kimv/Desktop/kim-instock/inStock/client/src/components/EditWarehouse/EditWarehouse.jsx":"6","/Users/kimv/Desktop/kim-instock/inStock/client/src/components/AddWarehouse/AddWarehouse.jsx":"7","/Users/kimv/Desktop/kim-instock/inStock/client/src/helper-functions.js":"8","/Users/kimv/Desktop/kim-instock/inStock/client/src/components/Input/Input.jsx":"9"},{"size":539,"mtime":1610591643039,"results":"10","hashOfConfig":"11"},{"size":1437,"mtime":1610821028130,"results":"12","hashOfConfig":"11"},{"size":362,"mtime":1610402478593,"results":"13","hashOfConfig":"11"},{"size":661,"mtime":1610821028136,"results":"14","hashOfConfig":"11"},{"size":817,"mtime":1610821028130,"results":"15","hashOfConfig":"11"},{"size":5782,"mtime":1610666565758,"results":"16","hashOfConfig":"11"},{"size":5517,"mtime":1610666565757,"results":"17","hashOfConfig":"11"},{"size":1338,"mtime":1610666565762,"results":"18","hashOfConfig":"11"},{"size":2263,"mtime":1610666565780,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"yhhm64",{"filePath":"23","messages":"24","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"22"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"22"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"22"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"22"},"/Users/kimv/Desktop/kim-instock/inStock/client/src/index.js",[],["43","44"],"/Users/kimv/Desktop/kim-instock/inStock/client/src/App.js",["45","46","47","48","49","50","51","52","53","54"],"/Users/kimv/Desktop/kim-instock/inStock/client/src/reportWebVitals.js",[],"/Users/kimv/Desktop/kim-instock/inStock/client/src/components/Warehouselist/Warehouselist.jsx",[],"/Users/kimv/Desktop/kim-instock/inStock/client/src/components/Header/Header.jsx",[],"/Users/kimv/Desktop/kim-instock/inStock/client/src/components/EditWarehouse/EditWarehouse.jsx",["55"],"import React, { Component } from 'react'\nimport arrow from '../../assets/images/Icons/arrow_back-24px.svg'\nimport add from '../../assets/images/Icons/add.svg'\nimport helpers from '../../helper-functions'\nimport axios from'axios'\nimport Input from '../Input/Input'\nimport '../styles/form.scss'\n\nexport default class AddWarehouse extends Component {\n    constructor(props){\n        super(props)\n        this.state = {\n            name: '',\n            address:'',\n            city: '',\n            country: '',\n            contact: {\n              name: '',\n              position: '',\n              phone: '',\n              email: ''\n            }\n        }\n    }\n\n    componentDidMount(){\n        let id = this.props.match.params.id\n        axios.get(`http://localhost:8080/warehouses/${id}`)\n            .then(res => {\n                this.setState(res.data)\n            })\n    }\n\n    handleDetailChange(e){\n        this.setState({\n            ...this.state,\n            [e.target.name]: e.target.value\n        })\n    }\n\n    handleContactChange(e){\n        this.setState({\n            ...this.state,\n            contact: {\n                ...this.state.contact,\n                [e.target.name]: e.target.value\n            }\n        })\n    }\n\n    handleSubmit(){\n        let id = this.props.match.params.id\n        if(helpers.validateProperties(this.state).length > 0) return \n        axios.patch(`http://localhost:8080/warehouses/${id}`, this.state)\n            .then(res=>this.props.history.push(`/warehouse/${res.data.id}`))\n    }\n\n    isEmpty(name, contact){\n        let empty\n        if(!contact) !this.state[name]? empty = true : empty = false\n        if(contact)  !this.state.contact[name]? empty = true : empty = false\n        return empty\n    }\n\n    render() {\n        return (\n            <div className = 'form titilliumWeb-Regular'>\n                <div className=\"form__header\">\n                    <img src={arrow} className = 'form__back-arrow' alt=\"\"/> \n                    <h1 className=\"form__heading\">Edit Warehouse</h1>                    \n                </div>\n\n                <div className=\"flex-container\">\n                    <div className=\"form__left-section\">\n                        <h2 className=\"form__subheading\">Warehouse Details</h2>\n\n                        <Input \n                            value = {this.state.name}\n                            name='name'    \n                            text='Warehouse Name' \n                            empty={this.isEmpty('name')} \n                            handleChange={(e)=>this.handleDetailChange(e)}\n                        />\n                        \n                        <Input \n                            value = {this.state.address}\n                            name='address' \n                            text='Street Address' \n                            empty={this.isEmpty('address')} \n                            handleChange={(e)=>this.handleDetailChange(e)}\n                        />\n\n                        <Input \n                            value = {this.state.city}\n                            name='city'    \n                            text='City' \n                            empty={this.isEmpty('city')} \n                            handleChange={(e)=>this.handleDetailChange(e)}\n                        />\n\n                        <Input \n                            value = {this.state.country}\n                            name='country' \n                            text='Country' \n                            empty={this.isEmpty('country')} \n                            handleChange={(e)=>this.handleDetailChange(e)}\n                        />\n                    </div>\n\n                    <div className=\"form__right-section\">\n                    <h2 className=\"form__subheading\">Contact</h2>\n                        <Input \n                            value = {this.state.contact.name}\n                            name='name' \n                            text='Contact Name' \n                            empty={this.isEmpty('name', true)} \n                            handleChange={(e)=>this.handleContactChange(e)} \n                        />\n\n                        <Input \n                            value = {this.state.contact.position}\n                            name='position' \n                            text='Position' \n                            empty={this.isEmpty('position', true)} \n                            handleChange={(e)=>this.handleContactChange(e)} \n                        />\n\n                        <Input \n                            value = {this.state.contact.phone}\n                            name='phone' \n                            text='Phone number' \n                            empty={this.isEmpty('phone', true)} \n                            handleChange={(e)=>this.handleContactChange(e)} \n                        />\n\n                        <Input \n                            value = {this.state.contact.email}\n                            name='email' \n                            text='Email' \n                            empty={this.isEmpty('email', true)} \n                            handleChange={(e)=>this.handleContactChange(e)} \n                        />\n                    </div>\n\n                </div>\n\n                <div className=\"form__button-container\">\n                    <button className=\"form__button\">\n                        Cancel\n                    </button>\n                    <button className=\"form__button\" \n                        onClick={(e)=>this.handleSubmit(e)}\n                    >   \n                        <img src={add} className='plus-icon'/> \n                        Add Warehouse\n                    </button>\n                </div>\n            </div>\n        )\n    }\n}\n","/Users/kimv/Desktop/kim-instock/inStock/client/src/components/AddWarehouse/AddWarehouse.jsx",["56"],"import React, { Component } from 'react'\nimport arrow from '../../assets/images/Icons/arrow_back-24px.svg'\nimport add from '../../assets/images/Icons/add.svg'\nimport helpers from '../../helper-functions'\nimport axios from'axios'\nimport Input from '../Input/Input'\nimport '../styles/form.scss'\n\nexport default class AddWarehouse extends Component {\n    constructor(props){\n        super(props)\n        this.state = {\n            name: '',\n            address:'',\n            city: '',\n            country: '',\n            contact: {\n              name: '',\n              position: '',\n              phone: '',\n              email: ''\n            }\n        }\n    }\n\n    handleDetailChange(e){\n        this.setState({\n            ...this.state,\n            [e.target.name]: e.target.value\n        })\n    }\n\n    handleContactChange(e){\n        this.setState({\n            ...this.state,\n            contact: {\n                ...this.state.contact,\n                [e.target.name]: e.target.value\n            }\n        })\n\n    }\n\n    handleSubmit(){\n        if(helpers.validateProperties(this.state).length > 0) return \n        axios.post('http://localhost:8080/warehouses', this.state)\n            .then(res=>this.props.history.push(`/warehouse/${res.data.id}`))\n    }\n\n    isEmpty(name, contact){\n        let empty\n        if(!contact) !this.state[name]? empty = true : empty = false\n        if(contact)  !this.state.contact[name]? empty = true : empty = false\n        return empty\n    }\n\n    render() {\n        return (\n            <div className = 'form titilliumWeb-Regular'>\n                <div className=\"form__header\">\n                    <img src={arrow} className = 'form__back-arrow' alt=\"\"/> \n                    <h1 className=\"form__heading\">Add New Warehouse</h1>                    \n                </div>\n\n                <div className=\"flex-container\">\n                    <div className=\"form__left-section\">\n                        <h2 className=\"form__subheading\">Warehouse Details</h2>\n\n                        <Input \n                            value = {this.state.name}\n                            name='name'    \n                            text='Warehouse Name' \n                            empty={this.isEmpty('name')} \n                            handleChange={(e)=>this.handleDetailChange(e)}\n                        />\n                        \n                        <Input \n                            value = {this.state.address}\n                            name='address' \n                            text='Street Address' \n                            empty={this.isEmpty('address')} \n                            handleChange={(e)=>this.handleDetailChange(e)}\n                        />\n\n                        <Input \n                            value = {this.state.city}\n                            name='city'    \n                            text='City' \n                            empty={this.isEmpty('city')} \n                            handleChange={(e)=>this.handleDetailChange(e)}\n                        />\n\n                        <Input \n                            value = {this.state.country}\n                            name='country' \n                            text='Country' \n                            empty={this.isEmpty('country')} \n                            handleChange={(e)=>this.handleDetailChange(e)}\n                        />\n                    </div>\n\n                    <div className=\"form__right-section\">\n                    <h2 className=\"form__subheading\">Contact</h2>\n                        <Input \n                            value = {this.state.contact.name}\n                            name='name' \n                            text='Contact Name' \n                            empty={this.isEmpty('name', true)} \n                            handleChange={(e)=>this.handleContactChange(e)} \n                        />\n\n                        <Input \n                            value = {this.state.contact.position}\n                            name='position' \n                            text='Position' \n                            empty={this.isEmpty('position', true)} \n                            handleChange={(e)=>this.handleContactChange(e)} \n                        />\n\n                        <Input \n                            value = {this.state.contact.phone}\n                            name='phone' \n                            text='Phone number' \n                            empty={this.isEmpty('phone', true)} \n                            handleChange={(e)=>this.handleContactChange(e)} \n                        />\n\n                        <Input \n                            value = {this.state.contact.email}\n                            name='email' \n                            text='Email' \n                            empty={this.isEmpty('email', true)} \n                            handleChange={(e)=>this.handleContactChange(e)} \n                        />\n                    </div>\n\n                </div>\n\n                <div className=\"form__button-container\">\n                    <button className=\"form__button\">\n                        Cancel\n                    </button>\n                    <button className=\"form__button\" \n                        onClick={(e)=>this.handleSubmit(e)}\n                    >   \n                        <img src={add} className='plus-icon'/> \n                        Add Warehouse\n                    </button>\n                </div>\n            </div>\n        )\n    }\n}\n","/Users/kimv/Desktop/kim-instock/inStock/client/src/helper-functions.js",["57","58","59"],"const helpers = {\n\n    /* takes a string and returns true if it's a valid phone number, false if not */\n    phone: function(string){\n        let re = /^[\\+]?[(]?[0-9]{3}[)]?[-\\s\\.]?[0-9]{3}[-\\s\\.]?[0-9]{4,6}$/im\n        return re.test(string)\n    },\n\n    /* takes a string and returns true if it's a valid email address, false if not */\n    email: function(string) {\n        const re = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n        return re.test(String(string).toLowerCase());\n    },\n\n    /* takes an object of any depth and returns an array of all empty properties, \n    and all properties called 'phone' or 'email' that contain an invalid phone number \n    or email address.*/\n\n    validateProperties: object => {\n        let badProperties = []\n\n        for(const x in object){\n            object[x] === '' && badProperties.push(x)\n\n            if((x === 'phone' || x === 'email') && !helpers[x](object[x])){\n                console.log('if')\n                badProperties.push(x)\n            }\n\n            if(typeof(object[x]) === 'object'){\n                badProperties.push(...helpers.validateProperties(object[x]))\n            }            \n        }\n        return badProperties\n    },\n}\n\nmodule.exports = helpers","/Users/kimv/Desktop/kim-instock/inStock/client/src/components/Input/Input.jsx",["60","61","62"],"import warning from '../../assets/images/Icons/error-24px.svg'\nimport React, { Component } from 'react'\n\nexport default class Input extends Component {\n    constructor(props){\n        super(props)\n        this.state = {\n            empty: props.empty ? 'form__input--empty' : '',\n            invalid: false,\n        }\n\n        this.validators = {\n            phone: function(string){\n                let re = /^[\\+]?[(]?[0-9]{3}[)]?[-\\s\\.]?[0-9]{3}[-\\s\\.]?[0-9]{4,6}$/im\n                return re.test(string)\n            },\n\n            email: function(string) {\n                const re = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n                return re.test(String(string).toLowerCase());\n            }\n\n        }\n    }\n\n    handleChange(e){\n\n        this.props.handleChange(e)\n\n        if(\n        this.validators[this.props.name] &&  \n        !this.validators[this.props.name](e.target.value) && \n        !this.props.empty\n        ){\n            this.setState({\n                ...this.state,\n                invalid: true\n            })\n        } \n\n        if(\n        this.validators[this.props.name] && \n        this.validators[this.props.name](e.target.value) && \n        !this.props.empty\n        ){\n            this.setState({\n                ...this.state,\n                invalid: false\n            })\n        } \n    }\n\n    render() {\n        return (\n            <div className=\"form__input-wrapper\">\n                {this.props.empty}\n                <label htmlFor={this.props.name} className=\"form__label\">{this.props.text}</label>\n                <input onChange={(e)=>{this.handleChange(e)}} name={this.props.name} type=\"text\" value={this.props.value} className={`form__input ${this.props.empty ? 'form__input--empty' : ''}`}/>\n                {(this.props.empty || this.state.invalid) && \n                    <span className=\"form__validation-span\">\n                        <img src={warning} alt=\"\" className=\"form__warning\"/>\n                        {this.state.invalid ? `Please provide a valid ${this.props.name}` : 'This field is required'}\n                    </span>\n                }\n            </div>\n        )\n    }\n}\n",{"ruleId":"63","replacedBy":"64"},{"ruleId":"65","replacedBy":"66"},{"ruleId":"67","severity":1,"message":"68","line":6,"column":8,"nodeType":"69","messageId":"70","endLine":6,"endColumn":14},{"ruleId":"67","severity":1,"message":"71","line":7,"column":8,"nodeType":"69","messageId":"70","endLine":7,"endColumn":21},{"ruleId":"72","severity":1,"message":"73","line":17,"column":45,"nodeType":"74","endLine":18,"endColumn":15},{"ruleId":"72","severity":1,"message":"73","line":19,"column":49,"nodeType":"74","endLine":20,"endColumn":15},{"ruleId":"72","severity":1,"message":"73","line":20,"column":71,"nodeType":"74","endLine":21,"endColumn":15},{"ruleId":"72","severity":1,"message":"73","line":21,"column":42,"nodeType":"74","endLine":22,"endColumn":15},{"ruleId":"72","severity":1,"message":"73","line":22,"column":51,"nodeType":"74","endLine":23,"endColumn":15},{"ruleId":"72","severity":1,"message":"73","line":23,"column":76,"nodeType":"74","endLine":24,"endColumn":15},{"ruleId":"72","severity":1,"message":"73","line":24,"column":56,"nodeType":"74","endLine":25,"endColumn":15},{"ruleId":"72","severity":1,"message":"73","line":25,"column":64,"nodeType":"74","endLine":26,"endColumn":13},{"ruleId":"75","severity":1,"message":"76","line":154,"column":25,"nodeType":"77","endLine":154,"endColumn":63},{"ruleId":"75","severity":1,"message":"76","line":146,"column":25,"nodeType":"77","endLine":146,"endColumn":63},{"ruleId":"78","severity":1,"message":"79","line":5,"column":21,"nodeType":"74","messageId":"80","endLine":5,"endColumn":22,"suggestions":"81"},{"ruleId":"78","severity":1,"message":"82","line":5,"column":45,"nodeType":"74","messageId":"80","endLine":5,"endColumn":46,"suggestions":"83"},{"ruleId":"78","severity":1,"message":"82","line":5,"column":61,"nodeType":"74","messageId":"80","endLine":5,"endColumn":62,"suggestions":"84"},{"ruleId":"78","severity":1,"message":"79","line":14,"column":29,"nodeType":"74","messageId":"80","endLine":14,"endColumn":30,"suggestions":"85"},{"ruleId":"78","severity":1,"message":"82","line":14,"column":53,"nodeType":"74","messageId":"80","endLine":14,"endColumn":54,"suggestions":"86"},{"ruleId":"78","severity":1,"message":"82","line":14,"column":69,"nodeType":"74","messageId":"80","endLine":14,"endColumn":70,"suggestions":"87"},"no-native-reassign",["88"],"no-negated-in-lhs",["89"],"no-unused-vars","'Header' is defined but never used.","Identifier","unusedVar","'Warehouselist' is defined but never used.","react/jsx-no-comment-textnodes","Comments inside children section of tag should be placed inside braces","Literal","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-useless-escape","Unnecessary escape character: \\+.","unnecessaryEscape",["90","91"],"Unnecessary escape character: \\..",["92","93"],["94","95"],["96","97"],["98","99"],["100","101"],"no-global-assign","no-unsafe-negation",{"messageId":"102","fix":"103","desc":"104"},{"messageId":"105","fix":"106","desc":"107"},{"messageId":"102","fix":"108","desc":"104"},{"messageId":"105","fix":"109","desc":"107"},{"messageId":"102","fix":"110","desc":"104"},{"messageId":"105","fix":"111","desc":"107"},{"messageId":"102","fix":"112","desc":"104"},{"messageId":"105","fix":"113","desc":"107"},{"messageId":"102","fix":"114","desc":"104"},{"messageId":"105","fix":"115","desc":"107"},{"messageId":"102","fix":"116","desc":"104"},{"messageId":"105","fix":"117","desc":"107"},"removeEscape",{"range":"118","text":"119"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"120","text":"121"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"122","text":"119"},{"range":"123","text":"121"},{"range":"124","text":"119"},{"range":"125","text":"121"},{"range":"126","text":"119"},{"range":"127","text":"121"},{"range":"128","text":"119"},{"range":"129","text":"121"},{"range":"130","text":"119"},{"range":"131","text":"121"},[153,154],"",[153,153],"\\",[177,178],[177,177],[193,194],[193,193],[412,413],[412,412],[436,437],[436,436],[452,453],[452,452]]