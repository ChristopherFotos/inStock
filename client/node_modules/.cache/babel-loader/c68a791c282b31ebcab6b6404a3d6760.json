{"ast":null,"code":"const helpers = {\n  /* takes a string and returns true if it's a valid phone number, false if not */\n  phone: function (string) {\n    let re = /^[\\+]?[(]?[0-9]{3}[)]?[-\\s\\.]?[0-9]{3}[-\\s\\.]?[0-9]{4,6}$/im;\n    return re.test(string);\n  },\n\n  /* takes a string and returns true if it's a valid email address, false if not */\n  email: function (string) {\n    const re = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    return re.test(String(string).toLowerCase());\n  },\n\n  /* takes an object of any depth and returns an array of all empty properties, \r\n  and all properties called 'phone' or 'email' that contain an invalid phone number \r\n  or email address.*/\n  validateProperties: object => {\n    let badProperties = [];\n\n    for (const x in object) {\n      object[x] === '' && badProperties.push(x);\n\n      if ((x === 'phone' || x === 'email') && !helpers[x](object[x])) {\n        console.log('if');\n        badProperties.push(x);\n      }\n\n      if (typeof object[x] === 'object') {\n        badProperties.push(...helpers.validateProperties(object[x]));\n      }\n    }\n\n    return badProperties;\n  }\n};\nmodule.exports = helpers;","map":{"version":3,"sources":["C:/Users/chris/OneDrive/Desktop/BrainStation/Projects/inStock/instock/client/src/helper-functions.js"],"names":["helpers","phone","string","re","test","email","String","toLowerCase","validateProperties","object","badProperties","x","push","console","log","module","exports"],"mappings":"AAAA,MAAMA,OAAO,GAAG;AAEZ;AACAC,EAAAA,KAAK,EAAE,UAASC,MAAT,EAAgB;AACnB,QAAIC,EAAE,GAAG,6DAAT;AACA,WAAOA,EAAE,CAACC,IAAH,CAAQF,MAAR,CAAP;AACH,GANW;;AAQZ;AACAG,EAAAA,KAAK,EAAE,UAASH,MAAT,EAAiB;AACpB,UAAMC,EAAE,GAAG,uJAAX;AACA,WAAOA,EAAE,CAACC,IAAH,CAAQE,MAAM,CAACJ,MAAD,CAAN,CAAeK,WAAf,EAAR,CAAP;AACH,GAZW;;AAcZ;AACJ;AACA;AAEIC,EAAAA,kBAAkB,EAAEC,MAAM,IAAI;AAC1B,QAAIC,aAAa,GAAG,EAApB;;AAEA,SAAI,MAAMC,CAAV,IAAeF,MAAf,EAAsB;AAClBA,MAAAA,MAAM,CAACE,CAAD,CAAN,KAAc,EAAd,IAAoBD,aAAa,CAACE,IAAd,CAAmBD,CAAnB,CAApB;;AAEA,UAAG,CAACA,CAAC,KAAK,OAAN,IAAiBA,CAAC,KAAK,OAAxB,KAAoC,CAACX,OAAO,CAACW,CAAD,CAAP,CAAWF,MAAM,CAACE,CAAD,CAAjB,CAAxC,EAA8D;AAC1DE,QAAAA,OAAO,CAACC,GAAR,CAAY,IAAZ;AACAJ,QAAAA,aAAa,CAACE,IAAd,CAAmBD,CAAnB;AACH;;AAED,UAAG,OAAOF,MAAM,CAACE,CAAD,CAAb,KAAsB,QAAzB,EAAkC;AAC9BD,QAAAA,aAAa,CAACE,IAAd,CAAmB,GAAGZ,OAAO,CAACQ,kBAAR,CAA2BC,MAAM,CAACE,CAAD,CAAjC,CAAtB;AACH;AACJ;;AACD,WAAOD,aAAP;AACH;AAlCW,CAAhB;AAqCAK,MAAM,CAACC,OAAP,GAAiBhB,OAAjB","sourcesContent":["const helpers = {\r\n\r\n    /* takes a string and returns true if it's a valid phone number, false if not */\r\n    phone: function(string){\r\n        let re = /^[\\+]?[(]?[0-9]{3}[)]?[-\\s\\.]?[0-9]{3}[-\\s\\.]?[0-9]{4,6}$/im\r\n        return re.test(string)\r\n    },\r\n\r\n    /* takes a string and returns true if it's a valid email address, false if not */\r\n    email: function(string) {\r\n        const re = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n        return re.test(String(string).toLowerCase());\r\n    },\r\n\r\n    /* takes an object of any depth and returns an array of all empty properties, \r\n    and all properties called 'phone' or 'email' that contain an invalid phone number \r\n    or email address.*/\r\n\r\n    validateProperties: object => {\r\n        let badProperties = []\r\n\r\n        for(const x in object){\r\n            object[x] === '' && badProperties.push(x)\r\n\r\n            if((x === 'phone' || x === 'email') && !helpers[x](object[x])){\r\n                console.log('if')\r\n                badProperties.push(x)\r\n            }\r\n\r\n            if(typeof(object[x]) === 'object'){\r\n                badProperties.push(...helpers.validateProperties(object[x]))\r\n            }            \r\n        }\r\n        return badProperties\r\n    },\r\n}\r\n\r\nmodule.exports = helpers"]},"metadata":{},"sourceType":"module"}